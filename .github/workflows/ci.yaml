# название
name: Project test 

# целевые события для запуска
# в данном случае это push и pull_request, в ветку master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}    
# выполняемые действия
jobs:
  test:
    runs-on: ubuntu-lates
#    outputs:
#      output1: ${{ steps.step1.outputs.test }}
#      output2: ${{ steps.step2.outputs.test }}
    steps:
        - id: step1
          run: echo "::set-output name=test::date"
        - name: Checkout
          uses: actions/checkout@v2
        - name: Setup-node
          uses: actions/setup-node@v1
          with:
            node-version: 14.x
      
        - name: Install
          run: npm ci

#        - name: Build
#          run: npm run build --if-present

        - name: Run Test
          run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless
          
#  build:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#        - name: Checkout
#          uses: actions/checkout@v2
#        - name: Setup-node
#          uses: actions/setup-node@v1
#          with:
#            node-version: 14.x
            
#        - name: Install
#          run: npm ci
          
        - name: Build
          run: npm build
        
        - name: Log in to the Container registry
          uses: docker/login-action@v1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
            
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v1
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        - name: Build and push Docker image
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}  
        - id: step2
          run: echo "::set-output name=test::date"
          
  time:
    needs: test
    runs-on: ubuntu-latest
    steps:
        - name: time
          run: echo ${{needs.test.outputs.output1}} ${{needs.test.outputs.output2}}
#  mail:
#    if: ${{ always() }}
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#        - name: Checkout
#          uses: actions/checkout@v2
#        - name: Setup-node
#          uses: actions/setup-node@v1
#          with:
#            node-version: 14.x


#Работает, но забанили за спам.
#Закомментил, т.к. мешает исполнению
#        - name: Send mail
#          uses: dawidd6/action-send-mail@v3
#          with:
#            server_address: smtp.mail.ru
#            server_port: 465
#            username:  test.anaconda@mail.ru
#            password: Z5fXS66dxvam95PFSaq6
#            subject: Github pipeline
#            to: gats1995@mail.ru
#            from: GitHubTest
#            body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          
